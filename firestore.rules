rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Videos collection
    match /videos/{videoId} {
      allow get: if true;  // Anyone can read a single video
      allow list: if true; // Anyone can list videos
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Video edits collection (for chapters and text overlays)
    match /video_edits/{videoId} {
      allow read, write: if true;  // Testing mode - allow all operations
    }

    // Video enhancements collection
    match /video_enhancements/{videoId} {
      allow read: if true;  // Anyone can read enhancements
      allow create, update: if isSignedIn() && exists(/databases/$(database)/documents/videos/$(videoId)) &&
        get(/databases/$(database)/documents/videos/$(videoId)).data.userId == request.auth.uid;
    }

    // Video interactions collection and subcollections
    match /video_interactions/{videoId} {
      match /interactions/{userId} {
        allow read: if isOwner(userId);
        allow create, update: if isOwner(userId);
      }
      
      // Allow video owner to read all interactions
      allow read: if isSignedIn() && 
        exists(/databases/$(database)/documents/videos/$(videoId)) &&
        get(/databases/$(database)/documents/videos/$(videoId)).data.userId == request.auth.uid;
    }
  }
} 